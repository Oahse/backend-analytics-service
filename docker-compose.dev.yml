
services:
  kafka:
    image: bitnami/kafka:3.8.0
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092  # <== important for inter-container comm
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
    restart: always
    networks:
      - webnet
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      retries: 5
      timeout: 10s
      start_period: 30s

  clickserver:
    image: clickhouse/clickhouse-server:23.7
    container_name: clickserver
    restart: always
    networks:
      - webnet
    ports:
      - "8123:8123"   # HTTP interface (used by clickhouse+http://)
      - "9000:9000"   # Native interface (used by clickhouse+native://)
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - clickhouse-config:/etc/clickhouse-server
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf http://localhost:8123/ping || exit 1"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 30s
  
  analyticsservice:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: analyticsservice
    depends_on:
      kafka:
        condition: service_healthy
      clickserver:
        condition: service_healthy
      
    ports:
      - "8000:8000"
    networks:
      - webnet
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    working_dir: /usr/src/app
    restart: always


networks:
  webnet:
    driver: bridge

volumes:
  analytics-data:
    external: true
  clickhouse-data:
  clickhouse-config: